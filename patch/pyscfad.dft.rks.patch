--- /home/awills/anaconda3/envs/pyscfad/lib/python3.10/site-packages/pyscfad/dft/rks.py	2025-03-05 11:08:56.533283190 -0500
+++ rks.py	2025-03-05 11:14:52.648249518 -0500
@@ -1,4 +1,5 @@
 import numpy
+import jax
 from jax import numpy as np
 from pyscf import __config__
 from pyscf.lib import current_memory
@@ -53,6 +54,22 @@
     else:
         max_memory = ks.max_memory - current_memory()[0]
         n, vxc.exc, vxc.vxc = ni.nr_rks(mol, ks.grids, ks.xc, dm, max_memory=max_memory)
+        #XCQUINOX MODIFICATION
+        if np.isnan(vxc.exc):
+            print('RKSAnalyzer.get_veff; nans in exc, trying with network')
+            excG, vxcG = jax.value_and_grad(ks.network_eval)(dm)
+            #restore symmetry
+            L = np.eye(dm.shape[-1])
+            if ks.network.verbose:
+                print('restoring vxc symmetry')
+            if vxcG.ndim > 2:
+                vxcG = np.einsum('ij,xjk,kl->xil',L,vxcG,L.T)
+            else:
+                vxcG = np.matmul(L,np.matmul(vxcG,L.T))
+            vxc.vxc = vxcG
+            vxc.exc = excG
+            # print('network exc, vxc: {}, {}'.format(excG, vxcG))
+
         if ks.nlc != '':
             assert 'VV10' in ks.nlc.upper()
             _, enlc, vnlc = ni.nr_rks(mol, ks.nlcgrids, ks.xc+'__'+ks.nlc, dm,
